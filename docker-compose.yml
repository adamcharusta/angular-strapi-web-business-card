version: "3.8"

services:
  postgres:
    restart: unless-stopped
    image: postgres:15.3-alpine3.18
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${POSTGRES_PGDATA}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
      POSTGRES_INITDB_WALDIR: ${POSTGRES_INITDB_WALDIR}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
    networks:
      - db
    volumes:
      - pgData:${POSTGRES_PGDATA}
#      - ./.data:${POSTGRES_PGDATA} # for devs
  strapi:
    build:
      context: ./strapi
    image: strapi:latest
    restart: unless-stopped
    ports:
      - ${STRAPI_PORT}:1337
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_USERNAME: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${STRAPI_JWT_SECRET}
      ADMIN_JWT_SECRET: ${STRAPI_ADMIN_JWT_SECRET}
      APP_KEYS: ${STRAPI_APP_KEYS}
      API_TOKEN_SALT: ${STRAPI_API_TOKEN_SALT}
      NODE_ENV: ${STRAPI_NODE_ENV}
    networks:
      - db
      - api
    depends_on:
      - postgres
  gui:
    build:
      context: ./gui
      args:
        - NODE_ENV=${GUI_NODE_ENV}
    image: gui:latest
    restart: unless-stopped
    ports:
      - ${GUI_PORT}:80
    networks:
      - api
    depends_on:
      - strapi

networks:
  db:
    driver: bridge
  api:
    driver: bridge

volumes:
  pgData:
